Linux Commands

ls ( used for showing all the files or folder in the current directory)

ls Documents (Document is used as the argument which uses Document as the argument)

ls -l  (-l stands for long display)

ls -r  ( -r stands for reverse order)

aptitude moo (to search the easter eggs)
aptitude -v moo
aptitude -vv moo

pwd ( to print the working directory)

cd ..    (to move to the parent directory)

cd .         (to show the current directory)

cd ~           (to move to the main directory)

d	directory	A file used to store other files.
-	regular file	Includes readable files, images files, binary files, and compressed files.
l	symbolic link	Points to another file.
s	socket	Allows for communication between processes.
p	pipe	Allows for communication between processes.
b	block file	Used to communicate with hardware.
c	character file	Used to communicate with hardware.

ls -t      (sort according to timestamp)
ls -s       (sort according to file size)
ls -r         (sort in reverse alphabetical order)

su                   (administrative login)
su -                  (administrative login)
su -l                (administrative login)
su --login            (administrative login)

sl         (steam locomotive command)

sudo sl   (perform the same function as su but sudo allows to perform the command not as root user)

Permission	Effects on File	Effects on Directory
read (r)	Allows for file contents to be read or copied.	Without execute permission on the directory, allows for a non-detailed listing of files. With execute permission, ls -l can provide a detailed listing.
write (w)	Allows for contents to be modified or overwritten. Allows for files to be added or removed from a directory.	For this permission to work, the directory must also have execute permission.
execute (x)	Allows for a file to be run as a process, although script files require read permission, as well.	Allows a user to change to the directory if parent directories have execute permission as well.

chmod u+x hello.sh              (chmod [<SET><ACTION><PERMISSIONS>]... FILE)

./hello.sh                (to run the file and display output)

sudo chown root hello.sh                          (chown [OPTIONS] [OWNER] FILE )   ( used to change the owner of the file)

cat animals.txt                                 (used to view the contents of the file)
pager animals.txt    (also used to view the contents of the file but it is required to view large files because it pauses the page to view the entire document)

head alpha.txt          (used to view some lines of the file from the top)
tail alpha.txt                (used to view some lines of the file from the bottom)

head -n 5 alpha.txt                  (-n is used to get only specified number of lines from the top)
tail -n 5 alpha.txt                  (-n is used to get only specified number of lines from the bottom)

cp /etc/passwd .                    (to make copy of content)

# dd command

dd if=/dev/zero of=/tmp/swapex bs=1M count=50

Argument	Description              (dd command)
if	
Input File: The input file to be read from.

dd if=/dev/zero of=/tmp/swapex bs=1M count=50 
The example reads from the /dev/zerofile, a special file containing an unlimited number of zeros.

of	
Output File: The output file to be written.

dd if=/dev/zero of=/tmp/swapex bs=1M count=50
bs	
Block Size: The block size to be used. By default, the value is considered to be in bytes. Use the following suffixes to specify other units: K, M, G, and T for kilobytes, megabytes, gigabytes and terabytes respectively.

dd if=/dev/zero of=/tmp/swapex bs=1M count=50
The example uses a block size of one megabyte.

count	
Count: The number of blocks to be read from the input file.

dd if=/dev/zero of=/tmp/swapex bs=1M count=50
The example command reads 50 blocks.